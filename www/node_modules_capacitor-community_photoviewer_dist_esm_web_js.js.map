{"version":3,"file":"node_modules_capacitor-community_photoviewer_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-community/photoviewer/dist/esm/web.js","./node_modules/jeep-photoviewer/dist/esm/index-796ed9f4.js","./node_modules/jeep-photoviewer/dist/esm/loader.js","./node_modules/jeep-photoviewer/dist/esm/polyfills/index.js","./node_modules/jeep-photoviewer/loader/index.es2017.js","./node_modules/jeep-photoviewer/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { defineCustomElements as jeepPhotoviewer } from 'jeep-photoviewer/loader';\nexport class PhotoViewerWeb extends WebPlugin {\n    constructor() {\n        super();\n        this._imageList = [];\n        this._options = {};\n        this._mode = 'one';\n        this._startFrom = 0;\n        this._modeList = ['one', 'gallery', 'slider'];\n        this.jeepPhotoViewerResult = (ev) => {\n            const res = ev.detail;\n            if (res !== null) {\n                this.notifyListeners('jeepCapPhotoViewerExit', res);\n            }\n        };\n        document.addEventListener('jeepPhotoViewerResult', this.jeepPhotoViewerResult, false);\n    }\n    async echo(options) {\n        return options;\n    }\n    async show(options) {\n        var _a;\n        //    return new Promise<capShowResult>( (resolve, reject) => {\n        jeepPhotoviewer(window);\n        if (Object.keys(options).includes('images')) {\n            this._imageList = options.images;\n        }\n        if (Object.keys(options).includes('options')) {\n            this._options = (_a = options.options) !== null && _a !== void 0 ? _a : {};\n        }\n        if (Object.keys(options).includes('mode')) {\n            const mMode = options.mode;\n            if (this._modeList.includes(mMode)) {\n                this._mode = mMode !== null && mMode !== void 0 ? mMode : 'one';\n            }\n        }\n        if (Object.keys(options).includes('startFrom')) {\n            const mStartFrom = options.startFrom;\n            this._startFrom = mStartFrom !== null && mStartFrom !== void 0 ? mStartFrom : 0;\n        }\n        this._photoViewer = document.createElement('jeep-photoviewer');\n        this._photoViewer.imageList = this._imageList;\n        this._photoViewer.mode = this._mode;\n        if (this._mode === 'one' || this._mode === 'slider') {\n            this._photoViewer.startFrom = this._startFrom;\n        }\n        const optionsKeys = Object.keys(this._options);\n        let divid;\n        if (optionsKeys.length > 0) {\n            this._photoViewer.options = this._options;\n            if (optionsKeys.includes('divid')) {\n                divid = this._options.divid;\n            }\n            else {\n                divid = 'photoviewer-container';\n            }\n        }\n        else {\n            divid = 'photoviewer-container';\n        }\n        this._container = document.querySelector(`#${divid}`);\n        // check if already a photoviewer element\n        if (this._container != null) {\n            const isPVEl = this._container.querySelector('jeep-photoviewer');\n            if (isPVEl != null) {\n                this._container.removeChild(isPVEl);\n            }\n            this._container.appendChild(this._photoViewer);\n            await customElements.whenDefined('jeep-photoviewer');\n            return Promise.resolve({ result: true });\n        }\n        else {\n            return Promise.reject(\"Div id='photoviewer-container' not found\");\n        }\n    }\n    async saveImageFromHttpToInternal(options) {\n        console.log('saveImageFromHttpToInternal', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getInternalImagePaths() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n","const NAMESPACE = 'jeep-photoviewer';\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/snabbdom/snabbdom/blob/master/LICENSE\n *\n * Modified for Stencil's renderer and slot projection\n */\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nlet queuePending = false;\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\n/**\n * Constant for styles to be globally applied to `slot-fb` elements for pseudo-slot behavior.\n *\n * Two cascading rules must be used instead of a `:not()` selector due to Stencil browser\n * support as of Stencil v4.\n */\nconst SLOT_FB_CSS = 'slot-fb{display:contents}slot-fb[hidden]{display:none}';\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst isDef = (v) => v != null;\n/**\n * Check whether a value is a 'complex type', defined here as an object or a\n * function.\n *\n * @param o the value to check\n * @returns whether it's a complex type or not\n */\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Helper method for querying a `meta` tag that contains a nonce value\n * out of a DOM's head.\n *\n * @param doc The DOM containing the `head` to query against\n * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag\n * exists or the tag has no content.\n */\nfunction queryNonceMetaTagContent(doc) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;\n}\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let simple = false;\n    let lastSimple = false;\n    const vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        // normalize class / className attributes\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    return vnode;\n};\n/**\n * A utility function for creating a virtual DOM node from a tag and some\n * possible text content.\n *\n * @param tag the tag for this element\n * @param text possible text content for the node\n * @returns a newly-minted virtual DOM node\n */\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\n/**\n * Check whether a given node is a Host node or not\n *\n * @param node the virtual DOM node to check\n * @returns whether it's a Host node or not\n */\nconst isHost = (node) => node && node.$tag$ === Host;\n/**\n * Parse a new property value for a given property type.\n *\n * While the prop value can reasonably be expected to be of `any` type as far as TypeScript's type checker is concerned,\n * it is not safe to assume that the string returned by evaluating `typeof propValue` matches:\n *   1. `any`, the type given to `propValue` in the function signature\n *   2. the type stored from `propType`.\n *\n * This function provides the capability to parse/coerce a property's value to potentially any other JavaScript type.\n *\n * Property values represented in TSX preserve their type information. In the example below, the number 0 is passed to\n * a component. This `propValue` will preserve its type information (`typeof propValue === 'number'`). Note that is\n * based on the type of the value being passed in, not the type declared of the class member decorated with `@Prop`.\n * ```tsx\n * <my-cmp prop-val={0}></my-cmp>\n * ```\n *\n * HTML prop values on the other hand, will always a string\n *\n * @param propValue the new value to coerce to some type\n * @param propType the type of the prop, expressed as a binary number\n * @returns the parsed/coerced value\n */\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (propType & 2 /* MEMBER_FLAGS.Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if (propType & 1 /* MEMBER_FLAGS.String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getElement = (ref) => (getHostRef(ref).$hostElement$ );\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* EVENT_FLAGS.Bubbles */),\n                composed: !!(flags & 2 /* EVENT_FLAGS.Composed */),\n                cancelable: !!(flags & 1 /* EVENT_FLAGS.Cancellable */),\n                detail,\n            });\n        },\n    };\n};\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst rootAppliedStyles = /*@__PURE__*/ new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructableStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        if (typeof style === 'string') {\n            style = cssText;\n        }\n        else {\n            style.replaceSync(cssText);\n        }\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode) => {\n    var _a;\n    const scopeId = getScopeId(cmpMeta);\n    const style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    styleElm = doc.createElement('style');\n                    styleElm.innerHTML = style;\n                    // Apply CSP nonce to the style tag if it exists\n                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n                    if (nonce != null) {\n                        styleElm.setAttribute('nonce', nonce);\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                // Add styles for `slot-fb` elements if we're using slots outside the Shadow DOM\n                if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {\n                    styleElm.innerHTML += SLOT_FB_CSS;\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n    if (flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (cmp.$tagName$);\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n/**\n * When running a VDom render set properties present on a VDom node onto the\n * corresponding HTML element.\n *\n * Note that this function has special functionality for the `class`,\n * `style`, `key`, and `ref` attributes, as well as event handlers (like\n * `onClick`, etc). All others are just passed through as-is.\n *\n * @param elm the HTMLElement onto which attributes should be set\n * @param memberName the name of the attribute to set\n * @param oldValue the old value for the attribute\n * @param newValue the new value for the attribute\n * @param isSvg whether we're in an svg context or not\n * @param flags bitflags for Vdom variables\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else if (memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if ((!isProp ) &&\n            memberName[0] === 'o' &&\n            memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue || newValue) {\n                // Need to account for \"capture\" events.\n                // If the event name ends with \"Capture\", we'll update the name to remove\n                // the \"Capture\" suffix and make sure the event listener is setup to handle the capture event.\n                const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n                // Make sure we only replace the last instance of \"Capture\"\n                memberName = memberName.replace(CAPTURE_EVENT_REGEX, '');\n                if (oldValue) {\n                    plt.rel(elm, memberName, oldValue, capture);\n                }\n                if (newValue) {\n                    plt.ael(elm, memberName, newValue, capture);\n                }\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        const n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) {\n                    /**\n                     * in case someone tries to set a read-only property, e.g. \"namespaceURI\", we just ignore it\n                     */\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\n/**\n * Parsed a string of classnames into an array\n * @param value className string, e.g. \"foo bar baz\"\n * @returns list of classes, e.g. [\"foo\", \"bar\", \"baz\"]\n */\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst CAPTURE_EVENT_SUFFIX = 'Capture';\nconst CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + '$');\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\n/**\n * Create a DOM Node corresponding to one of the children of a given VNode.\n *\n * @param oldParentVNode the parent VNode from the previous render\n * @param newParentVNode the parent VNode from the current render\n * @param childIndex the index of the VNode, in the _new_ parent node's\n * children, for which we will create a new DOM node\n * @param parentElm the parent DOM node which our new node will be a child of\n * @returns the newly created node\n */\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    const newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    if (newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else {\n        if (!isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$tag$)\n            );\n        if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    // This needs to always happen so we can hide nodes that are projected\n    // to another component but don't end up in a slot\n    elm['s-hn'] = hostTagName;\n    return elm;\n};\n/**\n * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and\n * add them to the DOM in the appropriate place.\n *\n * @param parentElm the DOM node which should be used as a parent for the new\n * DOM nodes\n * @param before a child of the `parentElm` which the new children should be\n * inserted before (optional)\n * @param parentVNode the parent virtual DOM node\n * @param vnodes the new child virtual DOM nodes to produce DOM nodes for\n * @param startIdx the index in the child virtual DOM nodes at which to start\n * creating DOM nodes (inclusive)\n * @param endIdx the index in the child virtual DOM nodes at which to stop\n * creating DOM nodes (inclusive)\n */\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = (parentElm);\n    let childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, before);\n            }\n        }\n    }\n};\n/**\n * Remove the DOM elements corresponding to a list of {@link d.VNode} objects.\n * This can be used to, for instance, clean up after a list of children which\n * should no longer be shown.\n *\n * This function also handles some of Stencil's slot relocation logic.\n *\n * @param vnodes a list of virtual DOM nodes to remove\n * @param startIdx the index at which to start removing nodes (inclusive)\n * @param endIdx the index at which to stop removing nodes (inclusive)\n */\nconst removeVnodes = (vnodes, startIdx, endIdx) => {\n    for (let index = startIdx; index <= endIdx; ++index) {\n        const vnode = vnodes[index];\n        if (vnode) {\n            const elm = vnode.$elm$;\n            if (elm) {\n                // remove the vnode's element from the dom\n                elm.remove();\n            }\n        }\n    }\n};\n/**\n * Reconcile the children of a new VNode with the children of an old VNode by\n * traversing the two collections of children, identifying nodes that are\n * conserved or changed, calling out to `patch` to make any necessary\n * updates to the DOM, and rearranging DOM nodes as needed.\n *\n * The algorithm for reconciling children works by analyzing two 'windows' onto\n * the two arrays of children (`oldCh` and `newCh`). We keep track of the\n * 'windows' by storing start and end indices and references to the\n * corresponding array entries. Initially the two 'windows' are basically equal\n * to the entire array, but we progressively narrow the windows until there are\n * no children left to update by doing the following:\n *\n * 1. Skip any `null` entries at the beginning or end of the two arrays, so\n *    that if we have an initial array like the following we'll end up dealing\n *    only with a window bounded by the highlighted elements:\n *\n *    [null, null, VNode1 , ... , VNode2, null, null]\n *                 ^^^^^^         ^^^^^^\n *\n * 2. Check to see if the elements at the head and tail positions are equal\n *    across the windows. This will basically detect elements which haven't\n *    been added, removed, or changed position, i.e. if you had the following\n *    VNode elements (represented as HTML):\n *\n *    oldVNode: `<div><p><span>HEY</span></p></div>`\n *    newVNode: `<div><p><span>THERE</span></p></div>`\n *\n *    Then when comparing the children of the `<div>` tag we check the equality\n *    of the VNodes corresponding to the `<p>` tags and, since they are the\n *    same tag in the same position, we'd be able to avoid completely\n *    re-rendering the subtree under them with a new DOM element and would just\n *    call out to `patch` to handle reconciling their children and so on.\n *\n * 3. Check, for both windows, to see if the element at the beginning of the\n *    window corresponds to the element at the end of the other window. This is\n *    a heuristic which will let us identify _some_ situations in which\n *    elements have changed position, for instance it _should_ detect that the\n *    children nodes themselves have not changed but merely moved in the\n *    following example:\n *\n *    oldVNode: `<div><element-one /><element-two /></div>`\n *    newVNode: `<div><element-two /><element-one /></div>`\n *\n *    If we find cases like this then we also need to move the concrete DOM\n *    elements corresponding to the moved children to write the re-order to the\n *    DOM.\n *\n * 4. Finally, if VNodes have the `key` attribute set on them we check for any\n *    nodes in the old children which have the same key as the first element in\n *    our window on the new children. If we find such a node we handle calling\n *    out to `patch`, moving relevant DOM nodes, and so on, in accordance with\n *    what we find.\n *\n * Finally, once we've narrowed our 'windows' to the point that either of them\n * collapse (i.e. they have length 0) we then handle any remaining VNode\n * insertion or deletion that needs to happen to get a DOM state that correctly\n * reflects the new child VNodes. If, for instance, after our window on the old\n * children has collapsed we still have more nodes on the new children that\n * we haven't dealt with yet then we need to add them, or if the new children\n * collapse but we still have unhandled _old_ children then we need to make\n * sure the corresponding DOM nodes are removed.\n *\n * @param parentElm the node into which the parent VNode is rendered\n * @param oldCh the old children of the parent node\n * @param newVNode the new VNode which will replace the parent\n * @param newCh the new children of the parent node\n * @param isInitialRender whether or not this is the first render of the vdom\n */\nconst updateChildren = (parentElm, oldCh, newVNode, newCh, isInitialRender = false) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // VNode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n            // if the start nodes are the same then we should patch the new VNode\n            // onto the old one, and increment our `newStartIdx` and `oldStartIdx`\n            // indices to reflect that. We don't need to move any DOM Nodes around\n            // since things are matched up in order.\n            patch(oldStartVnode, newStartVnode, isInitialRender);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n            // likewise, if the end nodes are the same we patch new onto old and\n            // decrement our end indices, and also likewise in this case we don't\n            // need to move any DOM Nodes.\n            patch(oldEndVnode, newEndVnode, isInitialRender);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n            patch(oldStartVnode, newEndVnode, isInitialRender);\n            // We need to move the element for `oldStartVnode` into a position which\n            // will be appropriate for `newEndVnode`. For this we can use\n            // `.insertBefore` and `oldEndVnode.$elm$.nextSibling`. If there is a\n            // sibling for `oldEndVnode.$elm$` then we want to move the DOM node for\n            // `oldStartVnode` between `oldEndVnode` and it's sibling, like so:\n            //\n            // <old-start-node />\n            // <some-intervening-node />\n            // <old-end-node />\n            // <!-- ->              <-- `oldStartVnode.$elm$` should be inserted here\n            // <next-sibling />\n            //\n            // If instead `oldEndVnode.$elm$` has no sibling then we just want to put\n            // the node for `oldStartVnode` at the end of the children of\n            // `parentElm`. Luckily, `Node.nextSibling` will return `null` if there\n            // aren't any siblings, and passing `null` to `Node.insertBefore` will\n            // append it to the children of the parent element.\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n            patch(oldEndVnode, newStartVnode, isInitialRender);\n            // We've already checked above if `oldStartVnode` and `newStartVnode` are\n            // the same node, so since we're here we know that they are not. Thus we\n            // can move the element for `oldEndVnode` _before_ the element for\n            // `oldStartVnode`, leaving `oldStartVnode` to be reconciled in the\n            // future.\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            {\n                // We either didn't find an element in the old children that matches\n                // the key of the first new child OR the build is not using `key`\n                // attributes at all. In either case we need to create a new element\n                // for the new node.\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                // if we created a new node then handle inserting it to the DOM\n                {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        // we have some more new nodes to add which don't match up with old nodes\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (newStartIdx > newEndIdx) {\n        // there are nodes in the `oldCh` array which no longer correspond to nodes\n        // in the new array, so lets remove them (which entails cleaning up the\n        // relevant DOM nodes)\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\n/**\n * Compare two VNodes to determine if they are the same\n *\n * **NB**: This function is an equality _heuristic_ based on the available\n * information set on the two VNodes and can be misleading under certain\n * circumstances. In particular, if the two nodes do not have `key` attrs\n * (available under `$key$` on VNodes) then the function falls back on merely\n * checking that they have the same tag.\n *\n * So, in other words, if `key` attrs are not set on VNodes which may be\n * changing order within a `children` array or something along those lines then\n * we could obtain a false negative and then have to do needless re-rendering\n * (i.e. we'd say two VNodes aren't equal when in fact they should be).\n *\n * @param leftVNode the first VNode to check\n * @param rightVNode the second VNode to check\n * @param isInitialRender whether or not this is the first render of the vdom\n * @returns whether they're equal or not\n */\nconst isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (leftVNode.$tag$ === rightVNode.$tag$) {\n        return true;\n    }\n    return false;\n};\n/**\n * Handle reconciling an outdated VNode with a new one which corresponds to\n * it. This function handles flushing updates to the DOM and reconciling the\n * children of the two nodes (if any).\n *\n * @param oldVNode an old VNode whose DOM element and children we want to update\n * @param newVNode a new VNode representing an updated version of the old one\n * @param isInitialRender whether or not this is the first render of the vdom\n */\nconst patch = (oldVNode, newVNode, isInitialRender = false) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    if (text === null) {\n        {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            // so we need to call `updateChildren` to reconcile them\n            updateChildren(elm, oldChildren, newVNode, newChildren, isInitialRender);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if (oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\n/**\n * The main entry point for Stencil's virtual DOM-based rendering engine\n *\n * Given a {@link d.HostRef} container and some virtual DOM nodes, this\n * function will handle creating a virtual DOM tree with a single root, patching\n * the current virtual DOM tree onto an old one (if any), dealing with slot\n * relocation, and reflecting attributes.\n *\n * @param hostRef data needed to root and render the virtual DOM tree, such as\n * the DOM node into which it should be rendered.\n * @param renderFnResults the virtual DOM nodes to be rendered\n * @param isInitialLoad whether or not this is the first call after page load\n */\nconst renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    // if `renderFnResults` is a Host node then we can use it directly. If not,\n    // we need to call `h` again to wrap the children of our component in a\n    // 'dummy' Host node (well, an empty vnode) since `renderVdom` assumes\n    // implicitly that the top-level vdom node is 1) an only child and 2)\n    // contains attrs that need to be set on the host element.\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    if (cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    // On the first render and *only* on the first render we want to check for\n    // any attributes set on the host element which are also set on the vdom\n    // node. If we find them, we override the value on the VDom node attrs with\n    // the value from the host element, which allows developers building apps\n    // with Stencil components to override e.g. the `role` attribute on a\n    // component even if it's already set on the `Host`.\n    if (isInitialLoad && rootVnode.$attrs$) {\n        for (const key of Object.keys(rootVnode.$attrs$)) {\n            // We have a special implementation in `setAccessor` for `style` and\n            // `class` which reconciles values coming from the VDom with values\n            // already present on the DOM element, so we don't want to override those\n            // attributes on the VDom tree with values from the host element if they\n            // are present.\n            //\n            // Likewise, `ref` and `key` are special internal values for the Stencil\n            // runtime and we don't want to override those either.\n            if (hostElm.hasAttribute(key) && !['key', 'ref', 'style', 'class'].includes(key)) {\n                rootVnode.$attrs$[key] = hostElm[key];\n            }\n        }\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode, isInitialLoad);\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    {\n        hostRef.$flags$ |= 16 /* HOST_FLAGS.isQueuedForUpdate */;\n    }\n    if (hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return writeTask(dispatch) ;\n};\n/**\n * Dispatch initial-render and update lifecycle hooks, enqueuing calls to\n * component lifecycle methods like `componentWillLoad` as well as\n * {@link updateComponent}, which will kick off the virtual DOM re-render.\n *\n * @param hostRef a reference to a host DOM node\n * @param isInitialLoad whether we're on the initial load or not\n * @returns an empty Promise which is used to enqueue a series of operations for\n * the component\n */\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = hostRef.$lazyInstance$ ;\n    // We're going to use this variable together with `enqueue` to implement a\n    // little promise-based queue. We start out with it `undefined`. When we add\n    // the first function to the queue we'll set this variable to be that\n    // function's return value. When we attempt to add subsequent values to the\n    // queue we'll check that value and, if it was a `Promise`, we'll then chain\n    // the new function off of that `Promise` using `.then()`. This will give our\n    // queue two nice properties:\n    //\n    // 1. If all functions added to the queue are synchronous they'll be called\n    //    synchronously right away.\n    // 2. If all functions added to the queue are asynchronous they'll all be\n    //    called in order after `dispatchHooks` exits.\n    let maybePromise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* HOST_FLAGS.isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = undefined;\n            }\n        }\n        {\n            // If `componentWillLoad` returns a `Promise` then we want to wait on\n            // whatever's going on in that `Promise` before we launch into\n            // rendering the component, doing other lifecycle stuff, etc. So\n            // in that case we assign the returned promise to the variable we\n            // declared above to hold a possible 'queueing' Promise\n            maybePromise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    endSchedule();\n    return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\n/**\n * This function uses a Promise to implement a simple first-in, first-out queue\n * of functions to be called.\n *\n * The queue is ordered on the basis of the first argument. If it's\n * `undefined`, then nothing is on the queue yet, so the provided function can\n * be called synchronously (although note that this function may return a\n * `Promise`). The idea is that then the return value of that enqueueing\n * operation is kept around, so that if it was a `Promise` then subsequent\n * functions can be enqueued by calling this function again with that `Promise`\n * as the first argument.\n *\n * @param maybePromise either a `Promise` which should resolve before the next function is called or an 'empty' sentinel\n * @param fn a function to enqueue\n * @returns either a `Promise` or the return value of the provided function\n */\nconst enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();\n/**\n * Check that a value is a `Promise`. To check, we first see if the value is an\n * instance of the `Promise` global. In a few circumstances, in particular if\n * the global has been overwritten, this is could be misleading, so we also do\n * a little 'duck typing' check to see if the `.then` property of the value is\n * defined and a function.\n *\n * @param maybePromise it might be a promise!\n * @returns whether it is or not\n */\nconst isPromisey = (maybePromise) => maybePromise instanceof Promise ||\n    (maybePromise && maybePromise.then && typeof maybePromise.then === 'function');\n/**\n * Update a component given reference to its host elements and so on.\n *\n * @param hostRef an object containing references to the element's host node,\n * VDom nodes, and other metadata\n * @param instance a reference to the underlying host element where it will be\n * rendered\n * @param isInitialLoad whether or not this function is being called as part of\n * the first render cycle\n */\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    var _a;\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        callRender(hostRef, instance, elm, isInitialLoad);\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = (_a = elm['s-p']) !== null && _a !== void 0 ? _a : [];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\n/**\n * Handle making the call to the VDom renderer with the proper context given\n * various build variables\n *\n * @param hostRef an object containing references to the element's host node,\n * VDom nodes, and other metadata\n * @param instance a reference to the underlying host element where it will be\n * rendered\n * @param elm the Host element for the component\n * @param isInitialLoad whether or not this function is being called as part of\n * @returns an empty promise\n */\nconst callRender = (hostRef, instance, elm, isInitialLoad) => {\n    try {\n        /**\n         * minification optimization: `allRenderFn` is `true` if all components have a `render`\n         * method, so we can call the method immediately. If not, check before calling it.\n         */\n        instance = instance.render() ;\n        {\n            hostRef.$flags$ &= ~16 /* HOST_FLAGS.isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;\n        }\n        {\n            {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                {\n                    renderVdom(hostRef, instance, isInitialLoad);\n                }\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    return null;\n};\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = hostRef.$lazyInstance$ ;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    {\n        safeCall(instance, 'componentDidRender');\n    }\n    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        {\n            safeCall(instance, 'componentDidLoad');\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n};\n/**\n * Allows to safely call a method, e.g. `componentDidLoad`, on an instance,\n * e.g. custom element node. If a build figures out that e.g. no component\n * has a `componentDidLoad` method, the instance method gets removed from the\n * output bundle and this function returns `undefined`.\n * @param instance any object that may or may not contain methods\n * @param method method name\n * @param arg single arbitrary argument\n * @returns result of method call if it exists, otherwise `undefined`\n */\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst addHydratedFlag = (elm) => elm.classList.add('hydrated')\n    ;\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = hostRef.$hostElement$ ;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = hostRef.$lazyInstance$ ;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    // explicitly check for NaN on both sides, as `NaN === NaN` is always false\n    const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n    const didValueChange = newVal !== oldVal && !areBothNaN;\n    if ((!(flags & 8 /* HOST_FLAGS.isConstructingInstance */) || oldVal === undefined) && didValueChange) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (instance) {\n            // get an array of method names of watch functions to call\n            if (cmpMeta.$watchers$ && flags & 128 /* HOST_FLAGS.isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map((watchMethodName) => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if ((flags & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\n/**\n * Attach a series of runtime constructs to a compiled Stencil component\n * constructor, including getters and setters for the `@Prop` and `@State`\n * decorators, callbacks for when attributes change, and so on.\n *\n * @param Cstr the constructor for a component that we need to process\n * @param cmpMeta metadata collected previously about the component\n * @param flags a number used to store a series of bit flags\n * @returns a reference to the same constructor passed in (but now mutated)\n */\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    var _a;\n    const prototype = Cstr.prototype;\n    if (cmpMeta.$members$) {\n        if (Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        members.map(([memberName, [memberFlags]]) => {\n            if ((memberFlags & 31 /* MEMBER_FLAGS.Prop */ ||\n                    ((flags & 2 /* PROXY_FLAGS.proxyState */) && memberFlags & 32 /* MEMBER_FLAGS.State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (flags & 1 /* PROXY_FLAGS.isElementConstructor */ &&\n                memberFlags & 64 /* MEMBER_FLAGS.Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        var _a;\n                        const ref = getHostRef(this);\n                        return (_a = ref === null || ref === void 0 ? void 0 : ref.$onInstancePromise$) === null || _a === void 0 ? void 0 : _a.then(() => { var _a; return (_a = ref.$lazyInstance$) === null || _a === void 0 ? void 0 : _a[memberName](...args); });\n                    },\n                });\n            }\n        });\n        if ((flags & 1 /* PROXY_FLAGS.isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, oldValue, newValue) {\n                plt.jmp(() => {\n                    var _a;\n                    const propName = attrNameToPropName.get(attrName);\n                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback\n                    //  in the case where an attribute was set inline.\n                    //  ```html\n                    //    <my-component some-attribute=\"some-value\"></my-component>\n                    //  ```\n                    //\n                    //  There is an edge case where a developer sets the attribute inline on a custom element and then\n                    //  programmatically changes it before it has been upgraded as shown below:\n                    //\n                    //  ```html\n                    //    <!-- this component has _not_ been upgraded yet -->\n                    //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n                    //    <script>\n                    //      // grab non-upgraded component\n                    //      el = document.querySelector(\"#test\");\n                    //      el.someAttribute = \"another-value\";\n                    //      // upgrade component\n                    //      customElements.define('my-component', MyComponent);\n                    //    </script>\n                    //  ```\n                    //  In this case if we do not un-shadow here and use the value of the shadowing property, attributeChangedCallback\n                    //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n                    //  to the value that was set inline i.e. \"some-value\" from above example. When\n                    //  the connectedCallback attempts to un-shadow it will use \"some-value\" as the initial value rather than \"another-value\"\n                    //\n                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/un-shadowed\n                    //  by connectedCallback as this attributeChangedCallback will not fire.\n                    //\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n                    //\n                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n                    //  properties here given that this goes against best practices outlined here\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n                    if (this.hasOwnProperty(propName)) {\n                        newValue = this[propName];\n                        delete this[propName];\n                    }\n                    else if (prototype.hasOwnProperty(propName) &&\n                        typeof this[propName] === 'number' &&\n                        this[propName] == newValue) {\n                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native\n                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in\n                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.\n                        return;\n                    }\n                    else if (propName == null) {\n                        // At this point we should know this is not a \"member\", so we can treat it like watching an attribute\n                        // on a vanilla web component\n                        const hostRef = getHostRef(this);\n                        const flags = hostRef === null || hostRef === void 0 ? void 0 : hostRef.$flags$;\n                        // We only want to trigger the callback(s) if:\n                        // 1. The instance is ready\n                        // 2. The watchers are ready\n                        // 3. The value has changed\n                        if (flags &&\n                            !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) &&\n                            flags & 128 /* HOST_FLAGS.isWatchReady */ &&\n                            newValue !== oldValue) {\n                            const instance = hostRef.$lazyInstance$ ;\n                            const entry = (_a = cmpMeta.$watchers$) === null || _a === void 0 ? void 0 : _a[attrName];\n                            entry === null || entry === void 0 ? void 0 : entry.forEach((callbackName) => {\n                                if (instance[callbackName] != null) {\n                                    instance[callbackName].call(instance, newValue, oldValue, attrName);\n                                }\n                            });\n                        }\n                        return;\n                    }\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // Create an array of attributes to observe\n            // This list in comprised of all strings used within a `@Watch()` decorator\n            // on a component as well as any Stencil-specific \"members\" (`@Prop()`s and `@State()`s).\n            // As such, there is no way to guarantee type-safety here that a user hasn't entered\n            // an invalid attribute.\n            Cstr.observedAttributes = Array.from(new Set([\n                ...Object.keys((_a = cmpMeta.$watchers$) !== null && _a !== void 0 ? _a : {}),\n                ...members\n                    .filter(([_, m]) => m[0] & 15 /* MEMBER_FLAGS.HasAttribute */)\n                    .map(([propName, m]) => {\n                    var _a;\n                    const attrName = m[1] || propName;\n                    attrNameToPropName.set(attrName, propName);\n                    if (m[0] & 512 /* MEMBER_FLAGS.ReflectAttr */) {\n                        (_a = cmpMeta.$attrsToReflect$) === null || _a === void 0 ? void 0 : _a.push([propName, attrName]);\n                    }\n                    return attrName;\n                }),\n            ]));\n        }\n    }\n    return Cstr;\n};\n/**\n * Initialize a Stencil component given a reference to its host element, its\n * runtime bookkeeping data structure, runtime metadata about the component,\n * and (optionally) an HMR version ID.\n *\n * @param elm a host element\n * @param hostRef the element's runtime bookkeeping object\n * @param cmpMeta runtime metadata for the Stencil component\n * @param hmrVersionId an (optional) HMR version ID\n */\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n    let Cstr;\n    // initializeComponent\n    if ((hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {\n        // Let the runtime know that the component has been initialized\n        hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;\n        {\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if (!Cstr.isProxied) {\n                // we've never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* PROXY_FLAGS.proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            {\n                hostRef.$flags$ |= 8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            {\n                hostRef.$flags$ &= ~8 /* HOST_FLAGS.isConstructingInstance */;\n            }\n            {\n                hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */;\n            }\n            endNewInstance();\n        }\n        if (Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            const scopeId = getScopeId(cmpMeta);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst fireConnectedCallback = (instance) => {\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* MEMBER_FLAGS.Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n            // fire off connectedCallback() on component instance\n            if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) ;\n            else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {\n                hostRef.$onReadyPromise$.then(() => fireConnectedCallback());\n            }\n        }\n        endConnected();\n    }\n};\nconst disconnectInstance = (instance) => {\n};\nconst disconnectedCallback = async (elm) => {\n    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map((rmListener) => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) ;\n        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {\n            hostRef.$onReadyPromise$.then(() => disconnectInstance());\n        }\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    var _a;\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const dataStyles = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    let hasSlotRelocation = false;\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            var _a;\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            // Check if we are using slots outside the shadow DOM in this component.\n            // We'll use this information later to add styles for `slot-fb` elements\n            if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {\n                hasSlotRelocation = true;\n            }\n            {\n                cmpMeta.$members$ = compactMeta[2];\n            }\n            {\n                cmpMeta.$listeners$ = compactMeta[3];\n            }\n            {\n                cmpMeta.$attrsToReflect$ = [];\n            }\n            {\n                cmpMeta.$watchers$ = (_a = compactMeta[4]) !== null && _a !== void 0 ? _a : {};\n            }\n            const tagName = cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        {\n                            {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */));\n            }\n        });\n    });\n    // Add styles for `slot-fb` elements if any of our components are using slots outside the Shadow DOM\n    if (hasSlotRelocation) {\n        dataStyles.innerHTML += SLOT_FB_CSS;\n    }\n    // Add hydration styles\n    {\n        dataStyles.innerHTML += cmpTags + HYDRATED_CSS;\n    }\n    // If we have styles, add them to the DOM\n    if (dataStyles.innerHTML.length) {\n        dataStyles.setAttribute('data-styles', '');\n        // Apply CSP nonce to the style tag if it exists\n        const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);\n        if (nonce != null) {\n            dataStyles.setAttribute('nonce', nonce);\n        }\n        // Insert the styles into the document head\n        // NOTE: this _needs_ to happen last so we can ensure the nonce (and other attributes) are applied\n        head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (listeners) {\n        listeners.map(([flags, name, method]) => {\n            const target = getHostListenerTarget(elm, flags) ;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        {\n            if (hostRef.$flags$ & 256 /* HOST_FLAGS.isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if (flags & 8 /* LISTENER_FLAGS.TargetWindow */)\n        return win;\n    return elm;\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0;\n/**\n * Assigns the given value to the nonce property on the runtime platform object.\n * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.\n * @param nonce The value to be assigned to the platform nonce property.\n * @returns void\n */\nconst setNonce = (nonce) => (plt.$nonce$ = nonce);\n/**\n * A WeakMap mapping runtime component references to their corresponding host reference\n * instances.\n */\nconst hostRefs = /*@__PURE__*/ new WeakMap();\n/**\n * Given a {@link d.RuntimeRef} retrieve the corresponding {@link d.HostRef}\n *\n * @param ref the runtime ref of interest\n * @returns the Host reference (if found) or undefined\n */\nconst getHostRef = (ref) => hostRefs.get(ref);\n/**\n * Register a lazy instance with the {@link hostRefs} object so it's\n * corresponding {@link d.HostRef} can be retrieved later.\n *\n * @param lazyInstance the lazy instance of interest\n * @param hostRef that instances `HostRef` object\n * @returns a reference to the host ref WeakMap\n */\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\n/**\n * Register a host element for a Stencil component, setting up various metadata\n * and callbacks based on {@link BUILD} flags as well as the component's runtime\n * metadata.\n *\n * @param hostElement the host element to register\n * @param cmpMeta runtime metadata for that component\n * @returns a reference to the host ref WeakMap\n */\nconst registerHost = (hostElement, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: hostElement,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));\n    }\n    {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        hostElement['s-p'] = [];\n        hostElement['s-rc'] = [];\n    }\n    addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$);\n    return hostRefs.set(hostElement, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (0, console.error)(e, el);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    const module = cmpModules.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n    return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${''}`).then((importedModule) => {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = /*@__PURE__*/ new Map();\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructableStylesheets = /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replaceSync === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    ;\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst flush = () => {\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = (cb) => promiseResolve().then(cb);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\n\nexport { Host as H, bootstrapLazy as b, createEvent as c, getElement as g, h, promiseResolve as p, registerInstance as r, setNonce as s };\n\n","import { b as bootstrapLazy } from './index-796ed9f4.js';\nexport { s as setNonce } from './index-796ed9f4.js';\n\nconst defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return undefined;\n  return bootstrapLazy([[\"jeep-photo-buttons_6\",[[1,\"jeep-photoviewer\",{\"imageList\":[16],\"options\":[16],\"mode\":[513,\"pvmode\"],\"startFrom\":[514,\"pvstartfrom\"],\"innerImageList\":[32],\"innerOptions\":[32],\"innerMode\":[32],\"innerStartFrom\":[32],\"showHScroll\":[32],\"close\":[32],\"init\":[64],\"closePhotoHScroll\":[64]},[[9,\"resize\",\"handleWindowResize\"],[0,\"jeepPhotoHscrollClose\",\"handleJeepPhotoHscrollClose\"],[0,\"jeepPhotoButtonsClose\",\"handleJeepPhotoButtonsClose\"],[0,\"jeepPhotoHscrollResult\",\"handleJeepPhotoHscrollResult\"]],{\"imageList\":[\"parseImageList\"],\"options\":[\"parseOptions\"],\"mode\":[\"parseMode\"],\"startFrom\":[\"parseStartFrom\"]}],[1,\"jeep-photo-hscroll\",{\"position\":[514,\"selposition\"],\"imageList\":[16],\"options\":[16],\"mode\":[513,\"pvmode\"],\"innerImageList\":[32],\"innerOptions\":[32],\"innerPosition\":[32],\"innerMode\":[32],\"buttonsVisibility\":[32],\"isFullscreen\":[32],\"photoZoom\":[32],\"share\":[32],\"shareShow\":[32],\"titleShow\":[32],\"maxZoomScale\":[32],\"currentIndex\":[32],\"init\":[64],\"setCarousel\":[64]},[[9,\"resize\",\"handleWindowResize\"],[0,\"jeepPhotoButtonsClose\",\"handleJeepPhotoButtonsClose\"],[0,\"jeepPhotoButtonsShare\",\"handleJeepPhotoButtonsShare\"],[0,\"jeepPhotoShareCompleted\",\"handleJeepPhotoShareCompleted\"],[0,\"jeepPhotoRequestFullscreen\",\"handleJeepPhotoFullscreenRequest\"],[0,\"jeepPhotoRequestMinimize\",\"handleJeepPhotoMinimizeRequest\"],[0,\"jeepPhotoZoomOneTap\",\"handleJeepPhotoZoomOneTap\"],[0,\"jeepPhotoSwipe\",\"handleJeepPhotoSwipe\"]],{\"position\":[\"parsePosition\"],\"imageList\":[\"parseImageList\"],\"options\":[\"parseOptions\"],\"mode\":[\"parseMode\"]}],[1,\"jeep-photo-buttons\",{\"share\":[513,\"sharevisible\"],\"viewmode\":[513],\"closebutton\":[513],\"fromcomponent\":[513],\"innerShare\":[32],\"innerViewmode\":[32],\"innerCloseButton\":[32],\"innerFromComponent\":[32],\"visible\":[32],\"mode\":[32],\"init\":[64],\"setPhotoButtons\":[64],\"setJeepPhotoButtonsVisibility\":[64]},null,{\"share\":[\"parseShare\"],\"viewmode\":[\"parseViewmode\"],\"closebutton\":[\"parseCloseButton\"],\"fromcomponent\":[\"parseFromComponent\"]}],[1,\"jeep-photo-share\",{\"surl\":[513],\"stitle\":[513],\"stext\":[513],\"innerUrl\":[32],\"innerTitle\":[32],\"innerText\":[32],\"init\":[64],\"setShare\":[64]},null,{\"surl\":[\"parseUrl\"],\"stitle\":[\"parseTitle\"],\"stext\":[\"parseText\"]}],[1,\"jeep-photo-swipe\",{\"timeThreshold\":[514,\"timethreshold\"],\"thresholdX\":[514,\"thresholdx\"],\"thresholdY\":[514,\"thresholdy\"],\"innerTimeThreshold\":[32],\"innerThresholdX\":[32],\"innerThresholdY\":[32],\"init\":[64],\"handleTouchStart\":[64],\"handleTouchEnd\":[64],\"handleMouseDown\":[64],\"handleMouseUp\":[64]},null,{\"timeThreshold\":[\"parseTimeThreshold\"],\"thresholdX\":[\"parseThresholdX\"],\"thresholdY\":[\"parseThresholdY\"]}],[1,\"jeep-photo-zoom\",{\"url\":[513],\"maxzoomscale\":[514],\"innerUrl\":[32],\"innerMaxZoomScale\":[32],\"init\":[64],\"setPhoto\":[64]},null,{\"url\":[\"parseUrl\"],\"maxzoomscale\":[\"parseMaxZooScale\"]}]]]], options);\n};\n\nexport { defineCustomElements };\n\n","export function applyPolyfills() {\n  var promises = [];\n  if (typeof window !== 'undefined') {\n    var win = window;\n\n    if (!win.customElements ||\n      (win.Element && (!win.Element.prototype.closest || !win.Element.prototype.matches || !win.Element.prototype.remove || !win.Element.prototype.getRootNode))) {\n      promises.push(import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js'));\n    }\n\n    var checkIfURLIsSupported = function() {\n      try {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        return (u.href === 'http://a/c%20d') && u.searchParams;\n      } catch (e) {\n        return false;\n      }\n    };\n\n    if (\n      'function' !== typeof Object.assign || !Object.entries ||\n      !Array.prototype.find || !Array.prototype.includes ||\n      !String.prototype.startsWith || !String.prototype.endsWith ||\n      (win.NodeList && !win.NodeList.prototype.forEach) ||\n      !win.fetch ||\n      !checkIfURLIsSupported() ||\n      typeof WeakMap == 'undefined'\n    ) {\n      promises.push(import(/* webpackChunkName: \"polyfills-core-js\" */ './core-js.js'));\n    }\n  }\n  return Promise.all(promises);\n}\n","\nexport * from '../dist/esm/polyfills/index.js';\nexport * from '../dist/esm/loader.js';\n","var map = {\n\t\"./jeep-photo-buttons_6.entry.js\": [\n\t\t78872,\n\t\t\"node_modules_jeep-photoviewer_dist_esm_jeep-photo-buttons_6_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 10528;\nmodule.exports = webpackAsyncContext;"],"names":["WebPlugin","defineCustomElements","jeepPhotoviewer","PhotoViewerWeb","constructor","_imageList","_options","_mode","_startFrom","_modeList","jeepPhotoViewerResult","ev","res","detail","notifyListeners","document","addEventListener","echo","options","_asyncToGenerator","show","_this","_a","window","Object","keys","includes","images","mMode","mode","mStartFrom","startFrom","_photoViewer","createElement","imageList","optionsKeys","divid","length","_container","querySelector","isPVEl","removeChild","appendChild","customElements","whenDefined","Promise","resolve","result","reject","saveImageFromHttpToInternal","_this2","console","log","unimplemented","getInternalImagePaths","_this3","NAMESPACE","scopeId","hostTagName","isSvgMode","queuePending","createTime","fnName","tagName","uniqueTime","key","measureText","HYDRATED_CSS","SLOT_FB_CSS","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","v","isComplexType","o","queryNonceMetaTagContent","doc","_b","_c","head","getAttribute","undefined","h","nodeName","vnodeData","children","child","simple","lastSimple","vNodeChildren","walk","c","i","Array","isArray","String","$text$","push","newVNode","classData","className","class","filter","k","join","vnode","$attrs$","$children$","tag","text","$flags$","$tag$","$elm$","Host","isHost","node","parsePropertyValue","propValue","propType","parseFloat","getElement","ref","getHostRef","$hostElement$","createEvent","name","flags","elm","emit","emitEvent","bubbles","composed","cancelable","opts","plt","ce","dispatchEvent","rootAppliedStyles","WeakMap","registerStyle","cssText","allowCS","style","styles","get","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","set","addStyle","styleContainerNode","cmpMeta","getScopeId","nodeType","appliedStyles","styleElm","Set","has","innerHTML","nonce","$nonce$","setAttribute","insertBefore","add","adoptedStyleSheets","attachStyles","hostRef","$cmpMeta$","endAttachStyles","$tagName$","shadowRoot","getRootNode","classList","cmp","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","prop","removeProperty","setProperty","slice","win","capture","endsWith","CAPTURE_EVENT_SUFFIX","replace","CAPTURE_EVENT_REGEX","rel","ael","isComplex","n","e","removeAttribute","parseClassListRegex","value","split","RegExp","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","createTextNode","createElementNS","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","index","updateChildren","oldCh","newCh","isInitialRender","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","isSameVnode","patch","nextSibling","parentNode","leftVNode","rightVNode","oldVNode","oldChildren","newChildren","textContent","data","renderVdom","renderFnResults","isInitialLoad","hostElm","$vnode$","rootVnode","$attrsToReflect$","map","propName","attribute","hasAttribute","attachToAncestor","ancestorComponent","$onRenderResolve$","r","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","$lazyInstance$","maybePromise","$queuedListeners$","methodName","event","safeCall","enqueue","updateComponent","fn","isPromisey","then","_ref","endUpdate","rc","endRender","callRender","cb","childrenPromises","postUpdate","postUpdateComponent","all","_x","_x2","_x3","apply","arguments","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","who","documentElement","namespace","method","arg","getValue","$instanceValues$","setValue","newVal","oldVal","$members$","areBothNaN","Number","isNaN","didValueChange","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","prototype","watchers","members","entries","memberFlags","defineProperty","configurable","enumerable","args","$onInstancePromise$","attrNameToPropName","Map","attributeChangedCallback","attrName","jmp","hasOwnProperty","entry","forEach","callbackName","call","observedAttributes","from","_","m","initializeComponent","_ref2","hmrVersionId","loadModule","endLoad","isProxied","endNewInstance","endRegisterStyles","schedule","_x4","_x5","_x6","_x7","fireConnectedCallback","connectedCallback","endConnected","addHostEventListeners","$listeners$","$onReadyPromise$","disconnectInstance","disconnectedCallback","_ref3","$rmListeners$","rmListener","_x8","bootstrapLazy","lazyBundles","endBootstrap","cmpTags","exclude","metaCharset","dataStyles","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","$resourcesUrl$","URL","resourcesUrl","baseURI","href","hasSlotRelocation","lazyBundle","compactMeta","HostElement","HTMLElement","self","registerHost","attachShadow","clearTimeout","componentOnReady","$lazyBundleId$","define","firstChild","setTimeout","listeners","attachParentListeners","target","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","setNonce","hostRefs","registerInstance","lazyInstance","hostElement","el","error","cmpModules","exportName","bundleId","module","importedModule","raf","requestAnimationFrame","eventName","listener","removeEventListener","CustomEvent","promiseResolve","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","H","b","g","p","s","applyPolyfills","promises","Element","closest","matches","checkIfURLIsSupported","u","pathname","searchParams","find","startsWith","NodeList","fetch"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5]}