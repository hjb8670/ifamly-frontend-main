{"version":3,"file":"node_modules_capacitor-firebase_authentication_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-firebase/authentication/dist/esm/web.js","./node_modules/firebase/auth/dist/esm/index.esm.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { EmailAuthProvider, FacebookAuthProvider, GithubAuthProvider, GoogleAuthProvider, OAuthCredential, OAuthProvider, RecaptchaVerifier, TwitterAuthProvider, applyActionCode, browserLocalPersistence, browserSessionPersistence, confirmPasswordReset, connectAuthEmulator, createUserWithEmailAndPassword, deleteUser, getAdditionalUserInfo, getAuth, getRedirectResult, inMemoryPersistence, indexedDBLocalPersistence, isSignInWithEmailLink, linkWithCredential, linkWithPhoneNumber, linkWithPopup, linkWithRedirect, reload, sendEmailVerification, sendPasswordResetEmail, sendSignInLinkToEmail, setPersistence, signInAnonymously, signInWithCustomToken, signInWithEmailAndPassword, signInWithEmailLink, signInWithPhoneNumber, signInWithPopup, signInWithRedirect, unlink, updateEmail, updatePassword, updateProfile, } from 'firebase/auth';\nimport { Persistence, ProviderId } from './definitions';\nexport class FirebaseAuthenticationWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.lastConfirmationResult = new Map();\n        const auth = getAuth();\n        auth.onAuthStateChanged(user => this.handleAuthStateChange(user));\n    }\n    async applyActionCode(options) {\n        const auth = getAuth();\n        return applyActionCode(auth, options.oobCode);\n    }\n    async createUserWithEmailAndPassword(options) {\n        const auth = getAuth();\n        const userCredential = await createUserWithEmailAndPassword(auth, options.email, options.password);\n        return this.createSignInResult(userCredential, null);\n    }\n    async confirmPasswordReset(options) {\n        const auth = getAuth();\n        return confirmPasswordReset(auth, options.oobCode, options.newPassword);\n    }\n    async confirmVerificationCode(options) {\n        const { verificationCode, verificationId } = options;\n        const confirmationResult = this.lastConfirmationResult.get(verificationId);\n        if (!confirmationResult) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_CONFIRMATION_RESULT_MISSING);\n        }\n        const userCredential = await confirmationResult.confirm(verificationCode);\n        return this.createSignInResult(userCredential, null);\n    }\n    async deleteUser() {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return deleteUser(currentUser);\n    }\n    async getCurrentUser() {\n        const auth = getAuth();\n        const userResult = this.createUserResult(auth.currentUser);\n        const result = {\n            user: userResult,\n        };\n        return result;\n    }\n    async getIdToken(options) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        const idToken = await auth.currentUser.getIdToken(options === null || options === void 0 ? void 0 : options.forceRefresh);\n        const result = {\n            token: idToken || '',\n        };\n        return result;\n    }\n    async getRedirectResult() {\n        const auth = getAuth();\n        const userCredential = await getRedirectResult(auth);\n        const authCredential = userCredential\n            ? OAuthProvider.credentialFromResult(userCredential)\n            : null;\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async getTenantId() {\n        const auth = getAuth();\n        return {\n            tenantId: auth.tenantId,\n        };\n    }\n    async isSignInWithEmailLink(options) {\n        const auth = getAuth();\n        return {\n            isSignInWithEmailLink: isSignInWithEmailLink(auth, options.emailLink),\n        };\n    }\n    async linkWithApple(options) {\n        const provider = new OAuthProvider(ProviderId.APPLE);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithEmailAndPassword(options) {\n        const authCredential = EmailAuthProvider.credential(options.email, options.password);\n        const userCredential = await this.linkCurrentUserWithCredential(authCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithEmailLink(options) {\n        const authCredential = EmailAuthProvider.credentialWithLink(options.email, options.emailLink);\n        const userCredential = await this.linkCurrentUserWithCredential(authCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithFacebook(options) {\n        const provider = new FacebookAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = FacebookAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithGameCenter() {\n        throw new Error('Not available on web.');\n    }\n    async linkWithGithub(options) {\n        const provider = new GithubAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GithubAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithGoogle(options) {\n        const provider = new GoogleAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GoogleAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithMicrosoft(options) {\n        const provider = new OAuthProvider(ProviderId.MICROSOFT);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithPhoneNumber(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        if (!options.phoneNumber) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_PHONE_NUMBER_MISSING);\n        }\n        if (!options.recaptchaVerifier ||\n            !(options.recaptchaVerifier instanceof RecaptchaVerifier)) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_RECAPTCHA_VERIFIER_MISSING);\n        }\n        try {\n            const confirmationResult = await linkWithPhoneNumber(currentUser, options.phoneNumber, options.recaptchaVerifier);\n            const { verificationId } = confirmationResult;\n            this.lastConfirmationResult.set(verificationId, confirmationResult);\n            const event = {\n                verificationId,\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_CODE_SENT_EVENT, event);\n        }\n        catch (error) {\n            const event = {\n                message: this.getErrorMessage(error),\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_VERIFICATION_FAILED_EVENT, event);\n        }\n    }\n    async linkWithPlayGames() {\n        throw new Error('Not available on web.');\n    }\n    async linkWithTwitter(options) {\n        const provider = new TwitterAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = TwitterAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async linkWithYahoo(options) {\n        const provider = new OAuthProvider(ProviderId.YAHOO);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.linkCurrentUserWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async reload() {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return reload(currentUser);\n    }\n    async sendEmailVerification() {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return sendEmailVerification(currentUser);\n    }\n    async sendPasswordResetEmail(options) {\n        const auth = getAuth();\n        return sendPasswordResetEmail(auth, options.email);\n    }\n    async sendSignInLinkToEmail(options) {\n        const auth = getAuth();\n        return sendSignInLinkToEmail(auth, options.email, options.actionCodeSettings);\n    }\n    async setLanguageCode(options) {\n        const auth = getAuth();\n        auth.languageCode = options.languageCode;\n    }\n    async setPersistence(options) {\n        const auth = getAuth();\n        switch (options.persistence) {\n            case Persistence.BrowserLocal:\n                await setPersistence(auth, browserLocalPersistence);\n                break;\n            case Persistence.BrowserSession:\n                await setPersistence(auth, browserSessionPersistence);\n                break;\n            case Persistence.IndexedDbLocal:\n                await setPersistence(auth, indexedDBLocalPersistence);\n                break;\n            case Persistence.InMemory:\n                await setPersistence(auth, inMemoryPersistence);\n                break;\n        }\n    }\n    async setTenantId(options) {\n        const auth = getAuth();\n        auth.tenantId = options.tenantId;\n    }\n    async signInAnonymously() {\n        const auth = getAuth();\n        const userCredential = await signInAnonymously(auth);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithApple(options) {\n        const provider = new OAuthProvider(ProviderId.APPLE);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithCustomToken(options) {\n        const auth = getAuth();\n        const userCredential = await signInWithCustomToken(auth, options.token);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithEmailAndPassword(options) {\n        const auth = getAuth();\n        const userCredential = await signInWithEmailAndPassword(auth, options.email, options.password);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithEmailLink(options) {\n        const auth = getAuth();\n        const userCredential = await signInWithEmailLink(auth, options.email, options.emailLink);\n        return this.createSignInResult(userCredential, null);\n    }\n    async signInWithFacebook(options) {\n        const provider = new FacebookAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = FacebookAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithGithub(options) {\n        const provider = new GithubAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GithubAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithGoogle(options) {\n        const provider = new GoogleAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = GoogleAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithMicrosoft(options) {\n        const provider = new OAuthProvider(ProviderId.MICROSOFT);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithPhoneNumber(options) {\n        if (!options.phoneNumber) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_PHONE_NUMBER_MISSING);\n        }\n        if (!options.recaptchaVerifier ||\n            !(options.recaptchaVerifier instanceof RecaptchaVerifier)) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_RECAPTCHA_VERIFIER_MISSING);\n        }\n        const auth = getAuth();\n        try {\n            const confirmationResult = await signInWithPhoneNumber(auth, options.phoneNumber, options.recaptchaVerifier);\n            const { verificationId } = confirmationResult;\n            this.lastConfirmationResult.set(verificationId, confirmationResult);\n            const event = {\n                verificationId,\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_CODE_SENT_EVENT, event);\n        }\n        catch (error) {\n            const event = {\n                message: this.getErrorMessage(error),\n            };\n            this.notifyListeners(FirebaseAuthenticationWeb.PHONE_VERIFICATION_FAILED_EVENT, event);\n        }\n    }\n    async signInWithPlayGames() {\n        throw new Error('Not available on web.');\n    }\n    async signInWithGameCenter() {\n        throw new Error('Not available on web.');\n    }\n    async signInWithTwitter(options) {\n        const provider = new TwitterAuthProvider();\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = TwitterAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signInWithYahoo(options) {\n        const provider = new OAuthProvider(ProviderId.YAHOO);\n        this.applySignInOptions(options || {}, provider);\n        const userCredential = await this.signInWithPopupOrRedirect(provider, options === null || options === void 0 ? void 0 : options.mode);\n        const authCredential = OAuthProvider.credentialFromResult(userCredential);\n        return this.createSignInResult(userCredential, authCredential);\n    }\n    async signOut() {\n        const auth = getAuth();\n        await auth.signOut();\n    }\n    async unlink(options) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        const user = await unlink(auth.currentUser, options.providerId);\n        const userResult = this.createUserResult(user);\n        const result = {\n            user: userResult,\n        };\n        return result;\n    }\n    async updateEmail(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return updateEmail(currentUser, options.newEmail);\n    }\n    async updatePassword(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return updatePassword(currentUser, options.newPassword);\n    }\n    async updateProfile(options) {\n        const auth = getAuth();\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return updateProfile(currentUser, options);\n    }\n    async useAppLanguage() {\n        const auth = getAuth();\n        auth.useDeviceLanguage();\n    }\n    async useEmulator(options) {\n        const auth = getAuth();\n        const port = options.port || 9099;\n        const scheme = options.scheme || 'http';\n        if (options.host.includes('://')) {\n            connectAuthEmulator(auth, `${options.host}:${port}`);\n        }\n        else {\n            connectAuthEmulator(auth, `${scheme}://${options.host}:${port}`);\n        }\n    }\n    handleAuthStateChange(user) {\n        const userResult = this.createUserResult(user);\n        const change = {\n            user: userResult,\n        };\n        this.notifyListeners(FirebaseAuthenticationWeb.AUTH_STATE_CHANGE_EVENT, change);\n    }\n    applySignInOptions(options, provider) {\n        if (options.customParameters) {\n            const customParameters = {};\n            options.customParameters.map(parameter => {\n                customParameters[parameter.key] = parameter.value;\n            });\n            provider.setCustomParameters(customParameters);\n        }\n        if (options.scopes) {\n            for (const scope of options.scopes) {\n                provider.addScope(scope);\n            }\n        }\n    }\n    signInWithPopupOrRedirect(provider, mode) {\n        const auth = getAuth();\n        if (mode === 'redirect') {\n            return signInWithRedirect(auth, provider);\n        }\n        else {\n            return signInWithPopup(auth, provider);\n        }\n    }\n    linkCurrentUserWithPopupOrRedirect(provider, mode) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        if (mode === 'redirect') {\n            return linkWithRedirect(auth.currentUser, provider);\n        }\n        else {\n            return linkWithPopup(auth.currentUser, provider);\n        }\n    }\n    linkCurrentUserWithCredential(credential) {\n        const auth = getAuth();\n        if (!auth.currentUser) {\n            throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n        }\n        return linkWithCredential(auth.currentUser, credential);\n    }\n    createSignInResult(userCredential, authCredential) {\n        const userResult = this.createUserResult((userCredential === null || userCredential === void 0 ? void 0 : userCredential.user) || null);\n        const credentialResult = this.createCredentialResult(authCredential);\n        const additionalUserInfoResult = this.createAdditionalUserInfoResult(userCredential);\n        const result = {\n            user: userResult,\n            credential: credentialResult,\n            additionalUserInfo: additionalUserInfoResult,\n        };\n        return result;\n    }\n    createCredentialResult(credential) {\n        if (!credential) {\n            return null;\n        }\n        const result = {\n            providerId: credential.providerId,\n        };\n        if (credential instanceof OAuthCredential) {\n            result.accessToken = credential.accessToken;\n            result.idToken = credential.idToken;\n            result.secret = credential.secret;\n        }\n        return result;\n    }\n    createUserResult(user) {\n        if (!user) {\n            return null;\n        }\n        const result = {\n            displayName: user.displayName,\n            email: user.email,\n            emailVerified: user.emailVerified,\n            isAnonymous: user.isAnonymous,\n            metadata: this.createUserMetadataResult(user.metadata),\n            phoneNumber: user.phoneNumber,\n            photoUrl: user.photoURL,\n            providerData: this.createUserProviderDataResult(user.providerData),\n            providerId: user.providerId,\n            tenantId: user.tenantId,\n            uid: user.uid,\n        };\n        return result;\n    }\n    createUserMetadataResult(metadata) {\n        const result = {};\n        if (metadata.creationTime) {\n            result.creationTime = Date.parse(metadata.creationTime);\n        }\n        if (metadata.lastSignInTime) {\n            result.lastSignInTime = Date.parse(metadata.lastSignInTime);\n        }\n        return result;\n    }\n    createUserProviderDataResult(providerData) {\n        return providerData.map(data => ({\n            displayName: data.displayName,\n            email: data.email,\n            phoneNumber: data.phoneNumber,\n            photoUrl: data.photoURL,\n            providerId: data.providerId,\n            uid: data.uid,\n        }));\n    }\n    createAdditionalUserInfoResult(credential) {\n        if (!credential) {\n            return null;\n        }\n        const additionalUserInfo = getAdditionalUserInfo(credential);\n        if (!additionalUserInfo) {\n            return null;\n        }\n        const { isNewUser, profile, providerId, username } = additionalUserInfo;\n        const result = {\n            isNewUser,\n        };\n        if (providerId !== null) {\n            result.providerId = providerId;\n        }\n        if (profile !== null) {\n            result.profile = profile;\n        }\n        if (username !== null && username !== undefined) {\n            result.username = username;\n        }\n        return result;\n    }\n    getErrorMessage(error) {\n        if (error instanceof Object &&\n            'message' in error &&\n            typeof error['message'] === 'string') {\n            return error['message'];\n        }\n        return JSON.stringify(error);\n    }\n}\nFirebaseAuthenticationWeb.AUTH_STATE_CHANGE_EVENT = 'authStateChange';\nFirebaseAuthenticationWeb.PHONE_CODE_SENT_EVENT = 'phoneCodeSent';\nFirebaseAuthenticationWeb.PHONE_VERIFICATION_FAILED_EVENT = 'phoneVerificationFailed';\nFirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN = 'No user is signed in.';\nFirebaseAuthenticationWeb.ERROR_PHONE_NUMBER_MISSING = 'phoneNumber must be provided.';\nFirebaseAuthenticationWeb.ERROR_RECAPTCHA_VERIFIER_MISSING = 'recaptchaVerifier must be provided and must be an instance of RecaptchaVerifier.';\nFirebaseAuthenticationWeb.ERROR_CONFIRMATION_RESULT_MISSING = 'No confirmation result with this verification id was found.';\n","export * from '@firebase/auth';\n"],"names":["WebPlugin","EmailAuthProvider","FacebookAuthProvider","GithubAuthProvider","GoogleAuthProvider","OAuthCredential","OAuthProvider","RecaptchaVerifier","TwitterAuthProvider","applyActionCode","browserLocalPersistence","browserSessionPersistence","confirmPasswordReset","connectAuthEmulator","createUserWithEmailAndPassword","deleteUser","getAdditionalUserInfo","getAuth","getRedirectResult","inMemoryPersistence","indexedDBLocalPersistence","isSignInWithEmailLink","linkWithCredential","linkWithPhoneNumber","linkWithPopup","linkWithRedirect","reload","sendEmailVerification","sendPasswordResetEmail","sendSignInLinkToEmail","setPersistence","signInAnonymously","signInWithCustomToken","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","signInWithPopup","signInWithRedirect","unlink","updateEmail","updatePassword","updateProfile","Persistence","ProviderId","FirebaseAuthenticationWeb","constructor","lastConfirmationResult","Map","auth","onAuthStateChanged","user","handleAuthStateChange","options","_asyncToGenerator","oobCode","_this","userCredential","email","password","createSignInResult","newPassword","confirmVerificationCode","_this2","verificationCode","verificationId","confirmationResult","get","Error","ERROR_CONFIRMATION_RESULT_MISSING","confirm","currentUser","ERROR_NO_USER_SIGNED_IN","getCurrentUser","_this3","userResult","createUserResult","result","getIdToken","idToken","forceRefresh","token","_this4","authCredential","credentialFromResult","getTenantId","tenantId","emailLink","linkWithApple","_this5","provider","APPLE","applySignInOptions","linkCurrentUserWithPopupOrRedirect","mode","linkWithEmailAndPassword","_this6","credential","linkCurrentUserWithCredential","linkWithEmailLink","_this7","credentialWithLink","linkWithFacebook","_this8","linkWithGameCenter","linkWithGithub","_this9","linkWithGoogle","_this10","linkWithMicrosoft","_this11","MICROSOFT","_this12","phoneNumber","ERROR_PHONE_NUMBER_MISSING","recaptchaVerifier","ERROR_RECAPTCHA_VERIFIER_MISSING","set","event","notifyListeners","PHONE_CODE_SENT_EVENT","error","message","getErrorMessage","PHONE_VERIFICATION_FAILED_EVENT","linkWithPlayGames","linkWithTwitter","_this13","linkWithYahoo","_this14","YAHOO","actionCodeSettings","setLanguageCode","languageCode","persistence","BrowserLocal","BrowserSession","IndexedDbLocal","InMemory","setTenantId","_this15","signInWithApple","_this16","signInWithPopupOrRedirect","_this17","_this18","_this19","signInWithFacebook","_this20","signInWithGithub","_this21","signInWithGoogle","_this22","signInWithMicrosoft","_this23","_this24","signInWithPlayGames","signInWithGameCenter","signInWithTwitter","_this25","signInWithYahoo","_this26","signOut","_this27","providerId","newEmail","useAppLanguage","useDeviceLanguage","useEmulator","port","scheme","host","includes","change","AUTH_STATE_CHANGE_EVENT","customParameters","map","parameter","key","value","setCustomParameters","scopes","scope","addScope","credentialResult","createCredentialResult","additionalUserInfoResult","createAdditionalUserInfoResult","additionalUserInfo","accessToken","secret","displayName","emailVerified","isAnonymous","metadata","createUserMetadataResult","photoUrl","photoURL","providerData","createUserProviderDataResult","uid","creationTime","Date","parse","lastSignInTime","data","isNewUser","profile","username","undefined","Object","JSON","stringify"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}