{"version":3,"file":"node_modules_capacitor_local-notifications_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor/local-notifications/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class LocalNotificationsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.pending = [];\n        this.deliveredNotifications = [];\n        this.hasNotificationSupport = () => {\n            if (!('Notification' in window) || !Notification.requestPermission) {\n                return false;\n            }\n            if (Notification.permission !== 'granted') {\n                // don't test for `new Notification` if permission has already been granted\n                // otherwise this sends a real notification on supported browsers\n                try {\n                    new Notification('');\n                }\n                catch (e) {\n                    if (e.name == 'TypeError') {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n    }\n    async getDeliveredNotifications() {\n        const deliveredSchemas = [];\n        for (const notification of this.deliveredNotifications) {\n            const deliveredSchema = {\n                title: notification.title,\n                id: parseInt(notification.tag),\n                body: notification.body,\n            };\n            deliveredSchemas.push(deliveredSchema);\n        }\n        return {\n            notifications: deliveredSchemas,\n        };\n    }\n    async removeDeliveredNotifications(delivered) {\n        for (const toRemove of delivered.notifications) {\n            const found = this.deliveredNotifications.find(n => n.tag === String(toRemove.id));\n            found === null || found === void 0 ? void 0 : found.close();\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !found);\n        }\n    }\n    async removeAllDeliveredNotifications() {\n        for (const notification of this.deliveredNotifications) {\n            notification.close();\n        }\n        this.deliveredNotifications = [];\n    }\n    async createChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async listChannels() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async schedule(options) {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        for (const notification of options.notifications) {\n            this.sendNotification(notification);\n        }\n        return {\n            notifications: options.notifications.map(notification => ({\n                id: notification.id,\n            })),\n        };\n    }\n    async getPending() {\n        return {\n            notifications: this.pending,\n        };\n    }\n    async registerActionTypes() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async cancel(pending) {\n        this.pending = this.pending.filter(notification => !pending.notifications.find(n => n.id === notification.id));\n    }\n    async areEnabled() {\n        const { display } = await this.checkPermissions();\n        return {\n            value: display === 'granted',\n        };\n    }\n    async changeExactNotificationSetting() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async checkExactNotificationSetting() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async requestPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(await Notification.requestPermission());\n        return { display };\n    }\n    async checkPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(Notification.permission);\n        return { display };\n    }\n    transformNotificationPermission(permission) {\n        switch (permission) {\n            case 'granted':\n                return 'granted';\n            case 'denied':\n                return 'denied';\n            default:\n                return 'prompt';\n        }\n    }\n    sendPending() {\n        var _a;\n        const toRemove = [];\n        const now = new Date().getTime();\n        for (const notification of this.pending) {\n            if (((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) &&\n                notification.schedule.at.getTime() <= now) {\n                this.buildNotification(notification);\n                toRemove.push(notification);\n            }\n        }\n        this.pending = this.pending.filter(notification => !toRemove.find(n => n === notification));\n    }\n    sendNotification(notification) {\n        var _a;\n        if ((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) {\n            const diff = notification.schedule.at.getTime() - new Date().getTime();\n            this.pending.push(notification);\n            setTimeout(() => {\n                this.sendPending();\n            }, diff);\n            return;\n        }\n        this.buildNotification(notification);\n    }\n    buildNotification(notification) {\n        const localNotification = new Notification(notification.title, {\n            body: notification.body,\n            tag: String(notification.id),\n        });\n        localNotification.addEventListener('click', this.onClick.bind(this, notification), false);\n        localNotification.addEventListener('show', this.onShow.bind(this, notification), false);\n        localNotification.addEventListener('close', () => {\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !this);\n        }, false);\n        this.deliveredNotifications.push(localNotification);\n        return localNotification;\n    }\n    onClick(notification) {\n        const data = {\n            actionId: 'tap',\n            notification,\n        };\n        this.notifyListeners('localNotificationActionPerformed', data);\n    }\n    onShow(notification) {\n        this.notifyListeners('localNotificationReceived', notification);\n    }\n}\n"],"names":["WebPlugin","LocalNotificationsWeb","constructor","arguments","pending","deliveredNotifications","hasNotificationSupport","window","Notification","requestPermission","permission","e","name","getDeliveredNotifications","_this","_asyncToGenerator","deliveredSchemas","notification","deliveredSchema","title","id","parseInt","tag","body","push","notifications","removeDeliveredNotifications","delivered","_this2","toRemove","found","find","n","String","close","filter","removeAllDeliveredNotifications","_this3","createChannel","_this4","unimplemented","deleteChannel","_this5","listChannels","_this6","schedule","options","_this7","unavailable","sendNotification","map","getPending","_this8","registerActionTypes","_this9","cancel","_this10","areEnabled","_this11","display","checkPermissions","value","changeExactNotificationSetting","_this12","checkExactNotificationSetting","_this13","requestPermissions","_this14","transformNotificationPermission","_this15","sendPending","_a","now","Date","getTime","at","buildNotification","diff","setTimeout","localNotification","addEventListener","onClick","bind","onShow","data","actionId","notifyListeners"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}